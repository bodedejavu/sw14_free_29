/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-04-15 19:10:39 UTC)
 * on 2014-06-10 at 15:16:38 UTC 
 * Modify at your own risk.
 */

package at.software2014.trackme.userdataendpoint;

/**
 * Service definition for Userdataendpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link UserdataendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Userdataendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.16.0-rc of the userdataendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://chrome-lambda-586.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "userdataendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Userdataendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Userdataendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addAllowedUser".
   *
   * This request holds the parameters needed by the the userdataendpoint server.  After setting any
   * optional parameters, call the {@link AddAllowedUser#execute()} method to invoke the remote
   * operation.
   *
   * @param ownEmail
   * @param userEmail
   * @return the request
   */
  public AddAllowedUser addAllowedUser(java.lang.String ownEmail, java.lang.String userEmail) throws java.io.IOException {
    AddAllowedUser result = new AddAllowedUser(ownEmail, userEmail);
    initialize(result);
    return result;
  }

  public class AddAllowedUser extends UserdataendpointRequest<Void> {

    private static final String REST_PATH = "addAllowedUser/{ownEmail}/{userEmail}";

    /**
     * Create a request for the method "addAllowedUser".
     *
     * This request holds the parameters needed by the the userdataendpoint server.  After setting any
     * optional parameters, call the {@link AddAllowedUser#execute()} method to invoke the remote
     * operation. <p> {@link AddAllowedUser#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param ownEmail
     * @param userEmail
     * @since 1.13
     */
    protected AddAllowedUser(java.lang.String ownEmail, java.lang.String userEmail) {
      super(Userdataendpoint.this, "POST", REST_PATH, null, Void.class);
      this.ownEmail = com.google.api.client.util.Preconditions.checkNotNull(ownEmail, "Required parameter ownEmail must be specified.");
      this.userEmail = com.google.api.client.util.Preconditions.checkNotNull(userEmail, "Required parameter userEmail must be specified.");
    }

    @Override
    public AddAllowedUser setAlt(java.lang.String alt) {
      return (AddAllowedUser) super.setAlt(alt);
    }

    @Override
    public AddAllowedUser setFields(java.lang.String fields) {
      return (AddAllowedUser) super.setFields(fields);
    }

    @Override
    public AddAllowedUser setKey(java.lang.String key) {
      return (AddAllowedUser) super.setKey(key);
    }

    @Override
    public AddAllowedUser setOauthToken(java.lang.String oauthToken) {
      return (AddAllowedUser) super.setOauthToken(oauthToken);
    }

    @Override
    public AddAllowedUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddAllowedUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddAllowedUser setQuotaUser(java.lang.String quotaUser) {
      return (AddAllowedUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddAllowedUser setUserIp(java.lang.String userIp) {
      return (AddAllowedUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String ownEmail;

    /**

     */
    public java.lang.String getOwnEmail() {
      return ownEmail;
    }

    public AddAllowedUser setOwnEmail(java.lang.String ownEmail) {
      this.ownEmail = ownEmail;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userEmail;

    /**

     */
    public java.lang.String getUserEmail() {
      return userEmail;
    }

    public AddAllowedUser setUserEmail(java.lang.String userEmail) {
      this.userEmail = userEmail;
      return this;
    }

    @Override
    public AddAllowedUser set(String parameterName, Object value) {
      return (AddAllowedUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUserData".
   *
   * This request holds the parameters needed by the the userdataendpoint server.  After setting any
   * optional parameters, call the {@link GetUserData#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetUserData getUserData(java.lang.String id) throws java.io.IOException {
    GetUserData result = new GetUserData(id);
    initialize(result);
    return result;
  }

  public class GetUserData extends UserdataendpointRequest<at.software2014.trackme.userdataendpoint.model.UserData> {

    private static final String REST_PATH = "userdata/{id}";

    /**
     * Create a request for the method "getUserData".
     *
     * This request holds the parameters needed by the the userdataendpoint server.  After setting any
     * optional parameters, call the {@link GetUserData#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetUserData#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetUserData(java.lang.String id) {
      super(Userdataendpoint.this, "GET", REST_PATH, null, at.software2014.trackme.userdataendpoint.model.UserData.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUserData setAlt(java.lang.String alt) {
      return (GetUserData) super.setAlt(alt);
    }

    @Override
    public GetUserData setFields(java.lang.String fields) {
      return (GetUserData) super.setFields(fields);
    }

    @Override
    public GetUserData setKey(java.lang.String key) {
      return (GetUserData) super.setKey(key);
    }

    @Override
    public GetUserData setOauthToken(java.lang.String oauthToken) {
      return (GetUserData) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUserData setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUserData) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUserData setQuotaUser(java.lang.String quotaUser) {
      return (GetUserData) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUserData setUserIp(java.lang.String userIp) {
      return (GetUserData) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public GetUserData setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public GetUserData set(String parameterName, Object value) {
      return (GetUserData) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUserDataList".
   *
   * This request holds the parameters needed by the the userdataendpoint server.  After setting any
   * optional parameters, call the {@link GetUserDataList#execute()} method to invoke the remote
   * operation.
   *
   * @param emailList
   * @return the request
   */
  public GetUserDataList getUserDataList(java.util.List<java.lang.String> emailList) throws java.io.IOException {
    GetUserDataList result = new GetUserDataList(emailList);
    initialize(result);
    return result;
  }

  public class GetUserDataList extends UserdataendpointRequest<at.software2014.trackme.userdataendpoint.model.UserDataCollection> {

    private static final String REST_PATH = "userdatacollection/{emailList}";

    /**
     * Create a request for the method "getUserDataList".
     *
     * This request holds the parameters needed by the the userdataendpoint server.  After setting any
     * optional parameters, call the {@link GetUserDataList#execute()} method to invoke the remote
     * operation. <p> {@link GetUserDataList#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param emailList
     * @since 1.13
     */
    protected GetUserDataList(java.util.List<java.lang.String> emailList) {
      super(Userdataendpoint.this, "GET", REST_PATH, null, at.software2014.trackme.userdataendpoint.model.UserDataCollection.class);
      this.emailList = com.google.api.client.util.Preconditions.checkNotNull(emailList, "Required parameter emailList must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUserDataList setAlt(java.lang.String alt) {
      return (GetUserDataList) super.setAlt(alt);
    }

    @Override
    public GetUserDataList setFields(java.lang.String fields) {
      return (GetUserDataList) super.setFields(fields);
    }

    @Override
    public GetUserDataList setKey(java.lang.String key) {
      return (GetUserDataList) super.setKey(key);
    }

    @Override
    public GetUserDataList setOauthToken(java.lang.String oauthToken) {
      return (GetUserDataList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUserDataList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUserDataList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUserDataList setQuotaUser(java.lang.String quotaUser) {
      return (GetUserDataList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUserDataList setUserIp(java.lang.String userIp) {
      return (GetUserDataList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> emailList;

    /**

     */
    public java.util.List<java.lang.String> getEmailList() {
      return emailList;
    }

    public GetUserDataList setEmailList(java.util.List<java.lang.String> emailList) {
      this.emailList = emailList;
      return this;
    }

    @Override
    public GetUserDataList set(String parameterName, Object value) {
      return (GetUserDataList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertUserData".
   *
   * This request holds the parameters needed by the the userdataendpoint server.  After setting any
   * optional parameters, call the {@link InsertUserData#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link at.software2014.trackme.userdataendpoint.model.UserData}
   * @return the request
   */
  public InsertUserData insertUserData(at.software2014.trackme.userdataendpoint.model.UserData content) throws java.io.IOException {
    InsertUserData result = new InsertUserData(content);
    initialize(result);
    return result;
  }

  public class InsertUserData extends UserdataendpointRequest<at.software2014.trackme.userdataendpoint.model.UserData> {

    private static final String REST_PATH = "userdata";

    /**
     * Create a request for the method "insertUserData".
     *
     * This request holds the parameters needed by the the userdataendpoint server.  After setting any
     * optional parameters, call the {@link InsertUserData#execute()} method to invoke the remote
     * operation. <p> {@link InsertUserData#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link at.software2014.trackme.userdataendpoint.model.UserData}
     * @since 1.13
     */
    protected InsertUserData(at.software2014.trackme.userdataendpoint.model.UserData content) {
      super(Userdataendpoint.this, "POST", REST_PATH, content, at.software2014.trackme.userdataendpoint.model.UserData.class);
    }

    @Override
    public InsertUserData setAlt(java.lang.String alt) {
      return (InsertUserData) super.setAlt(alt);
    }

    @Override
    public InsertUserData setFields(java.lang.String fields) {
      return (InsertUserData) super.setFields(fields);
    }

    @Override
    public InsertUserData setKey(java.lang.String key) {
      return (InsertUserData) super.setKey(key);
    }

    @Override
    public InsertUserData setOauthToken(java.lang.String oauthToken) {
      return (InsertUserData) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertUserData setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertUserData) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertUserData setQuotaUser(java.lang.String quotaUser) {
      return (InsertUserData) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertUserData setUserIp(java.lang.String userIp) {
      return (InsertUserData) super.setUserIp(userIp);
    }

    @Override
    public InsertUserData set(String parameterName, Object value) {
      return (InsertUserData) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listUserData".
   *
   * This request holds the parameters needed by the the userdataendpoint server.  After setting any
   * optional parameters, call the {@link ListUserData#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListUserData listUserData() throws java.io.IOException {
    ListUserData result = new ListUserData();
    initialize(result);
    return result;
  }

  public class ListUserData extends UserdataendpointRequest<at.software2014.trackme.userdataendpoint.model.CollectionResponseUserData> {

    private static final String REST_PATH = "userdata";

    /**
     * Create a request for the method "listUserData".
     *
     * This request holds the parameters needed by the the userdataendpoint server.  After setting any
     * optional parameters, call the {@link ListUserData#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListUserData#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListUserData() {
      super(Userdataendpoint.this, "GET", REST_PATH, null, at.software2014.trackme.userdataendpoint.model.CollectionResponseUserData.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListUserData setAlt(java.lang.String alt) {
      return (ListUserData) super.setAlt(alt);
    }

    @Override
    public ListUserData setFields(java.lang.String fields) {
      return (ListUserData) super.setFields(fields);
    }

    @Override
    public ListUserData setKey(java.lang.String key) {
      return (ListUserData) super.setKey(key);
    }

    @Override
    public ListUserData setOauthToken(java.lang.String oauthToken) {
      return (ListUserData) super.setOauthToken(oauthToken);
    }

    @Override
    public ListUserData setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListUserData) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListUserData setQuotaUser(java.lang.String quotaUser) {
      return (ListUserData) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListUserData setUserIp(java.lang.String userIp) {
      return (ListUserData) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListUserData setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListUserData setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListUserData set(String parameterName, Object value) {
      return (ListUserData) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "register".
   *
   * This request holds the parameters needed by the the userdataendpoint server.  After setting any
   * optional parameters, call the {@link Register#execute()} method to invoke the remote operation.
   *
   * @param email
   * @param name
   * @return the request
   */
  public Register register(java.lang.String email, java.lang.String name) throws java.io.IOException {
    Register result = new Register(email, name);
    initialize(result);
    return result;
  }

  public class Register extends UserdataendpointRequest<Void> {

    private static final String REST_PATH = "register/{email}/{name}";

    /**
     * Create a request for the method "register".
     *
     * This request holds the parameters needed by the the userdataendpoint server.  After setting any
     * optional parameters, call the {@link Register#execute()} method to invoke the remote operation.
     * <p> {@link
     * Register#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @param name
     * @since 1.13
     */
    protected Register(java.lang.String email, java.lang.String name) {
      super(Userdataendpoint.this, "POST", REST_PATH, null, Void.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
    }

    @Override
    public Register setAlt(java.lang.String alt) {
      return (Register) super.setAlt(alt);
    }

    @Override
    public Register setFields(java.lang.String fields) {
      return (Register) super.setFields(fields);
    }

    @Override
    public Register setKey(java.lang.String key) {
      return (Register) super.setKey(key);
    }

    @Override
    public Register setOauthToken(java.lang.String oauthToken) {
      return (Register) super.setOauthToken(oauthToken);
    }

    @Override
    public Register setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Register) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Register setQuotaUser(java.lang.String quotaUser) {
      return (Register) super.setQuotaUser(quotaUser);
    }

    @Override
    public Register setUserIp(java.lang.String userIp) {
      return (Register) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public Register setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public Register setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @Override
    public Register set(String parameterName, Object value) {
      return (Register) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeUserData".
   *
   * This request holds the parameters needed by the the userdataendpoint server.  After setting any
   * optional parameters, call the {@link RemoveUserData#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveUserData removeUserData(java.lang.String id) throws java.io.IOException {
    RemoveUserData result = new RemoveUserData(id);
    initialize(result);
    return result;
  }

  public class RemoveUserData extends UserdataendpointRequest<Void> {

    private static final String REST_PATH = "userdata/{id}";

    /**
     * Create a request for the method "removeUserData".
     *
     * This request holds the parameters needed by the the userdataendpoint server.  After setting any
     * optional parameters, call the {@link RemoveUserData#execute()} method to invoke the remote
     * operation. <p> {@link RemoveUserData#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveUserData(java.lang.String id) {
      super(Userdataendpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveUserData setAlt(java.lang.String alt) {
      return (RemoveUserData) super.setAlt(alt);
    }

    @Override
    public RemoveUserData setFields(java.lang.String fields) {
      return (RemoveUserData) super.setFields(fields);
    }

    @Override
    public RemoveUserData setKey(java.lang.String key) {
      return (RemoveUserData) super.setKey(key);
    }

    @Override
    public RemoveUserData setOauthToken(java.lang.String oauthToken) {
      return (RemoveUserData) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveUserData setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveUserData) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveUserData setQuotaUser(java.lang.String quotaUser) {
      return (RemoveUserData) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveUserData setUserIp(java.lang.String userIp) {
      return (RemoveUserData) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public RemoveUserData setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveUserData set(String parameterName, Object value) {
      return (RemoveUserData) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateLocation".
   *
   * This request holds the parameters needed by the the userdataendpoint server.  After setting any
   * optional parameters, call the {@link UpdateLocation#execute()} method to invoke the remote
   * operation.
   *
   * @param email
   * @param latitude
   * @param longitude
   * @param timestamp
   * @return the request
   */
  public UpdateLocation updateLocation(java.lang.String email, java.lang.Double latitude, java.lang.Double longitude, java.lang.Long timestamp) throws java.io.IOException {
    UpdateLocation result = new UpdateLocation(email, latitude, longitude, timestamp);
    initialize(result);
    return result;
  }

  public class UpdateLocation extends UserdataendpointRequest<Void> {

    private static final String REST_PATH = "void/{email}/{latitude}/{longitude}/{timestamp}";

    /**
     * Create a request for the method "updateLocation".
     *
     * This request holds the parameters needed by the the userdataendpoint server.  After setting any
     * optional parameters, call the {@link UpdateLocation#execute()} method to invoke the remote
     * operation. <p> {@link UpdateLocation#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param email
     * @param latitude
     * @param longitude
     * @param timestamp
     * @since 1.13
     */
    protected UpdateLocation(java.lang.String email, java.lang.Double latitude, java.lang.Double longitude, java.lang.Long timestamp) {
      super(Userdataendpoint.this, "PUT", REST_PATH, null, Void.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
      this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
    }

    @Override
    public UpdateLocation setAlt(java.lang.String alt) {
      return (UpdateLocation) super.setAlt(alt);
    }

    @Override
    public UpdateLocation setFields(java.lang.String fields) {
      return (UpdateLocation) super.setFields(fields);
    }

    @Override
    public UpdateLocation setKey(java.lang.String key) {
      return (UpdateLocation) super.setKey(key);
    }

    @Override
    public UpdateLocation setOauthToken(java.lang.String oauthToken) {
      return (UpdateLocation) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateLocation setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateLocation) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateLocation setQuotaUser(java.lang.String quotaUser) {
      return (UpdateLocation) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateLocation setUserIp(java.lang.String userIp) {
      return (UpdateLocation) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public UpdateLocation setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public UpdateLocation setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double longitude;

    /**

     */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    public UpdateLocation setLongitude(java.lang.Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long timestamp;

    /**

     */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }

    public UpdateLocation setTimestamp(java.lang.Long timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    @Override
    public UpdateLocation set(String parameterName, Object value) {
      return (UpdateLocation) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateUserData".
   *
   * This request holds the parameters needed by the the userdataendpoint server.  After setting any
   * optional parameters, call the {@link UpdateUserData#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link at.software2014.trackme.userdataendpoint.model.UserData}
   * @return the request
   */
  public UpdateUserData updateUserData(at.software2014.trackme.userdataendpoint.model.UserData content) throws java.io.IOException {
    UpdateUserData result = new UpdateUserData(content);
    initialize(result);
    return result;
  }

  public class UpdateUserData extends UserdataendpointRequest<at.software2014.trackme.userdataendpoint.model.UserData> {

    private static final String REST_PATH = "userdata";

    /**
     * Create a request for the method "updateUserData".
     *
     * This request holds the parameters needed by the the userdataendpoint server.  After setting any
     * optional parameters, call the {@link UpdateUserData#execute()} method to invoke the remote
     * operation. <p> {@link UpdateUserData#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link at.software2014.trackme.userdataendpoint.model.UserData}
     * @since 1.13
     */
    protected UpdateUserData(at.software2014.trackme.userdataendpoint.model.UserData content) {
      super(Userdataendpoint.this, "PUT", REST_PATH, content, at.software2014.trackme.userdataendpoint.model.UserData.class);
    }

    @Override
    public UpdateUserData setAlt(java.lang.String alt) {
      return (UpdateUserData) super.setAlt(alt);
    }

    @Override
    public UpdateUserData setFields(java.lang.String fields) {
      return (UpdateUserData) super.setFields(fields);
    }

    @Override
    public UpdateUserData setKey(java.lang.String key) {
      return (UpdateUserData) super.setKey(key);
    }

    @Override
    public UpdateUserData setOauthToken(java.lang.String oauthToken) {
      return (UpdateUserData) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateUserData setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateUserData) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateUserData setQuotaUser(java.lang.String quotaUser) {
      return (UpdateUserData) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateUserData setUserIp(java.lang.String userIp) {
      return (UpdateUserData) super.setUserIp(userIp);
    }

    @Override
    public UpdateUserData set(String parameterName, Object value) {
      return (UpdateUserData) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Userdataendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Userdataendpoint}. */
    @Override
    public Userdataendpoint build() {
      return new Userdataendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link UserdataendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setUserdataendpointRequestInitializer(
        UserdataendpointRequestInitializer userdataendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(userdataendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
